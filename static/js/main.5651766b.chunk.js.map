{"version":3,"sources":["Form/styled.js","Form/index.js","Form/useFocus.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","NewTasks","input","StyledButton","button","Form","addNewTaskContent","inputRef","useRef","focusInput","current","focus","useFocus","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","ref","value","onChange","target","type","placeholder","onClick","List","ul","Item","li","hidden","css","red","green","Content","span","done","Tasks","tasks","hideDone","removeTask","toggleDone","map","task","id","content","StyledButtons","div","Button","Buttons","toggleHideDone","setTasksDone","length","disabled","every","StyledSection","section","StyledHeader","h2","Section","title","body","extraHeaderContent","Header","StyledMain","main","Container","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5651766b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    padding: 15px;\r\n    border: 1px solid rgb(238, 237, 239);\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 15px;\r\n\r\n    @media (max-width: 600px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const NewTasks = styled.input`\r\n    border: 1px solid rgb(238, 237, 239);\r\n    padding: 10px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    font-size: 17px;\r\n    transition: 0.5s;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 15px;\r\n    background-color: rgb(0, 115, 131);\r\n\r\n    &:hover{\r\n        transform: scale(1.1);\r\n        background-color: rgba(0, 116, 131, 0.788);\r\n    }\r\n\r\n    &:active{\r\n        background-color: rgb(14, 104, 116);\r\n        color: rgb(173, 173, 173);\r\n    }\r\n`;","import { useState } from \"react\";\r\nimport { StyledForm, NewTasks, StyledButton } from \"./styled\"\r\nimport { useFocus } from \"./useFocus\";\r\n\r\nconst Form = ({ addNewTaskContent }) => {\r\n    const { inputRef, focusInput } = useFocus();\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        setNewTaskContent(\"\")\r\n        if (newTaskContent.trim() !== \"\") {\r\n            return addNewTaskContent(newTaskContent)\r\n        }\r\n    };\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <NewTasks ref={inputRef} value={newTaskContent} onChange={(event) => setNewTaskContent(event.target.value)} type=\"text\" placeholder=\"Co jest do zrobienia?\" />\r\n            <StyledButton onClick={focusInput}>\r\n                Dodaj zadanie\r\n            </StyledButton>\r\n        </StyledForm>\r\n    );\r\n}\r\n\r\nexport default Form;","import { useRef } from \"react\";\r\n\r\nexport const useFocus = () => {\r\n    const inputRef = useRef(null);\r\n    const focusInput = () => {\r\n        inputRef.current.focus()\r\n    };\r\n    return { inputRef, focusInput };\r\n};","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    margin: 0px;\r\n    padding: 10px;\r\n    border: 1px solid rgb(238, 237, 239);\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    padding: 10px;\r\n    display: grid;\r\n    grid-template-columns: 25px 1fr 25px;\r\n    list-style-type: none;\r\n    border-bottom: 1px solid rgb(238, 237, 239);\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    font-size: 17px;\r\n    transition: 0.5s;\r\n    color: white;\r\n    border: none;\r\n\r\n    ${({ red }) => red && css`\r\n        height: 30px;\r\n        width: 30px;\r\n        background-color: red;\r\n\r\n        &:hover {\r\n            background-color: rgba(255, 0, 0, 0.500);\r\n        }\r\n    `}\r\n\r\n    ${({ green }) => green && css`\r\n        height: 30px;\r\n        width: 30px;\r\n        font-size: 17px;\r\n        background-color: green;\r\n\r\n        &:hover {\r\n            background-color: rgba(0, 128, 0, 0.500);\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    justify-self: start;\r\n    align-self: center;\r\n    padding-left: 10px;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;","import { List, Item, StyledButton, Content } from \"./styled\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleDone }) => (\r\n  <List>\r\n    {tasks.map(task => (\r\n      <Item key={task.id} hidden={task.done && hideDone}>\r\n        <StyledButton green onClick={() => toggleDone(task.id)}>\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </StyledButton>\r\n        <Content done={task.done}>\r\n          {task.id} - {task.content}\r\n        </Content>\r\n        <StyledButton red onClick={() => removeTask(task.id)}>\r\n          ğŸ—‘\r\n        </StyledButton>\r\n      </Item>))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const StyledButtons = styled.div`\r\n\r\n    @media (max-width: 600px) {\r\n        padding: 20px;\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        grid-gap: 20px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    font-size: 17px;\r\n    transition: 0.5s;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(0, 115, 131);\r\n\r\n    &:hover{\r\n        background-color: transparent;\r\n        color: rgba(0, 116, 131, 0.500);\r\n    }\r\n\r\n    &:disabled{\r\n        color: rgb(119, 119, 119);\r\n    }\r\n`;","import { StyledButtons, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, toggleHideDone, setTasksDone, hideDone }) => (\r\n    <StyledButtons>\r\n      {tasks.length > 0 && (\r\n      <>\r\n        <Button onClick={toggleHideDone}>\r\n          {hideDone ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj UkoÅ„czone\"}\r\n        </Button>\r\n        <Button\r\n          onClick={setTasksDone}\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          UkoÅ„cz wszystkie\r\n        </Button>\r\n      </>\r\n      )}\r\n    </StyledButtons>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: white;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const StyledHeader = styled.h2`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    font-size: 20px;\r\n    margin: 0px;\r\n    padding: 15px;\r\n    border: 1px solid rgb(238, 237, 239);\r\n\r\n    @media (max-width: 600px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n    }\r\n\r\n`;","import {StyledSection, StyledHeader} from \"./styled\"\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <StyledSection>\r\n        <StyledHeader>{title}\r\n            {extraHeaderContent}\r\n        </StyledHeader>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 1050px;\r\n    margin: 0 auto;\r\n`;","import { StyledMain } from \"./styled\";\r\n\r\nconst Container = ({children}) => (\r\n    <StyledMain>\r\n        {children}\r\n    </StyledMain>\r\n)\r\n export default Container;","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useTasks } from \"./useTasks\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    removeTask,\r\n    setTasksDone,\r\n    toggleDone,\r\n    addNewTaskContent\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header\r\n        title=\"Lista zadaÅ„\"\r\n      />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={\r\n          <Form addNewTaskContent={addNewTaskContent} />\r\n        }\r\n      />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleDone={toggleDone} />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setTasksDone={setTasksDone} />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasksStorage\")) || []);\r\n  \r\n    const removeTask = (id) => {\r\n      setTasks(tasks => tasks.filter(task => task.id !== id))\r\n    };\r\n  \r\n    const setTasksDone = () => {\r\n      setTasks(tasks => tasks.map(task => ({ ...task, done: true })))\r\n    };\r\n  \r\n    const toggleDone = (id) => {\r\n      setTasks(tasks => tasks.map(task => {\r\n        if (task.id === id) {\r\n          return { ...task, done: !task.done }\r\n        };\r\n        return task;\r\n      }))\r\n    };\r\n  \r\n    const addNewTaskContent = (newTaskContent) => {\r\n      setTasks(tasks => [\r\n        ...tasks,\r\n        {\r\n          content: newTaskContent,\r\n          done: false,\r\n          id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n        },\r\n      ])\r\n    };\r\n  \r\n    useEffect(() => {\r\n      localStorage.setItem(\"tasksStorage\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n  \r\n    return {tasks, removeTask, setTasksDone, toggleDone, addNewTaskContent};\r\n  };\r\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}