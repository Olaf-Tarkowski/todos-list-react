{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTaskContent","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","className","value","onChange","target","type","placeholder","required","Tasks","tasks","hideDone","removeTask","toggleDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setTasksDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2af9426d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({addNewTaskContent}) => {\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        setNewTaskContent(\"\")\r\n        if (newTaskContent.trim() !== \"\") {\r\n            return addNewTaskContent(newTaskContent)\r\n        }\r\n    };\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    return (\r\n        <form onSubmit={onFormSubmit} className=\"form\">\r\n            <input value={newTaskContent} onChange={(event) => setNewTaskContent(event.target.value)} className=\"form__newTasks\" type=\"text\" placeholder=\"Co jest do zrobienia?\"  required/>\r\n            <button className=\"form__button form__button--action\">Dodaj zadanie</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleDone}) => (\r\n  <ul className=\"list\">\r\n    {tasks.map(task =>\r\n      <li key={task.id} className={`list__item ${task.done && hideDone ? \"list__item--hidden\" : \"\"}`}>\r\n        <button onClick={() => toggleDone(task.id)} className=\"list__button list__button--green\">\r\n          {task.done ? \"âœ”\" : \"\"}\r\n        </button>\r\n        <span className={`list__position ${task.done ? \"list__item--done\" : \"\"}`}>\r\n          {task.id} - {task.content}\r\n        </span>\r\n        <button onClick={ () => removeTask(task.id)}className={`list__button list__button--red`}>\r\n          ðŸ—‘\r\n        </button>\r\n      </li>)}\r\n  </ul>\r\n);\r\n\r\nexport default Tasks;","\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, toggleHideDone, setTasksDone, hideDone }) => (\r\n    <div className=\"buttons\">\r\n      {tasks.length > 0 && (\r\n      <>\r\n        <button onClick={toggleHideDone} className=\"button button__teal\">\r\n          {hideDone ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj UkoÅ„czone\"}\r\n        </button>\r\n        <button\r\n          onClick={setTasksDone}\r\n          className=\"button button__teal\"\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          UkoÅ„cz wszystkie\r\n        </button>\r\n      </>\r\n      )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <section className=\"section\">\r\n        <h2 className=\"section__header\">{title}\r\n            {extraHeaderContent}\r\n        </h2>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import \"./style.css\"\r\n\r\nconst Container = ({children}) => (\r\n    <main className=\"main\">\r\n        {children}\r\n    </main>\r\n)\r\n export default Container;","import React, { useEffect, useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\n\r\n\r\nfunction App() {\r\n  const inital = () => (\r\n    JSON.parse(localStorage.getItem(\"tasksStorage\")) || []\r\n  );\r\n\r\n  const [hideDone, setHideDone] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const [tasks, setTasks] = useState(inital);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id))\r\n  };\r\n\r\n  const setTasksDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })))\r\n  };\r\n\r\n  const toggleDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, done: !task.done }\r\n      };\r\n      return task;\r\n    }))\r\n  };\r\n\r\n  const addNewTaskContent = (newTaskContent) => {\r\n    setTasks(tasks => [\r\n      ...tasks,\r\n      {\r\n        content: newTaskContent,\r\n        done: false,\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n      },\r\n    ])\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasksStorage\", JSON.stringify(tasks))\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header\r\n        title=\"Lista zadaÅ„\"\r\n      />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={\r\n          <Form addNewTaskContent={addNewTaskContent} />\r\n        }\r\n      />\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleDone={toggleDone} />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setTasksDone={setTasksDone} />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}